{"version":3,"sources":["assets/images/background.jpg","styles/variables.js","styles/common.js","actions/categories.js","actions/types.js","pages/Categories.js","actions/joke.js","styles/joke.js","pages/Joke.js","styles/spinner.js","components/Spinner.js","reducers/categoriesReducer.js","reducers/jokeReducer.js","reducers/index.js","store.js","styles/app.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","colours","sizes","fonts","GlobalStyle","createGlobalStyle","_templateObject","Page","styled","div","withConfig","displayName","componentId","Copy","sharedLinkStyle","css","_templateObject2","BasicLink","a","StyledLink","Link","NewCategoryLink","MainTitle","h1","Container","RightContainer","props","loading","LeftContainer","fetchCategories","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","_ref2","categories","wrap","_context","prev","next","type","axios","sent","data","payload","t0","stop","this","_x","apply","arguments","Categories","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","getCategories","categoryItems","map","category","index","react_default","createElement","to","concat","Component","connect","state","fetchJokeFromCategory","joke","JokeIcon","img","JokeHeader","h3","PrimaryButton","button","Row","Joke","_this","call","getJoke","bind","assertThisInitialized","_this$props","getJokeFromCategory","match","params","_this$props2","onClick","icon_url","src","alt","href","url","rel","target","SpinnerContainer","Parent","translate","keyframes","spinner_templateObject","trace","spinner_templateObject2","BaseElement","categoryLoading","jokeLoading","react_transition_group","timeout","classNames","in","unmountOnExit","className","initialState","combineReducers","length","undefined","action","objectSpread","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","AppShell","backgroundImage","App","es","HashRouter","app","components_Spinner","Route","render","location","pathname","Switch","exact","path","component","Boolean","window","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9acbfdc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.b787a503.jpg\";","\nexport const colours = {\n  orange: '#f25b25',\n  lightOrange: '#f36d3d',\n  black: 'rgba(57, 57, 57, 0.9)',\n};\n\nexport const sizes = {\n  desktopSmall: '(max-width: 1070px)',\n  tablet: '(max-width: 800px)',\n  mobile: '(max-width: 600px)',\n};\n\nexport const fonts = {\n  primary: \"'Poppins', -apple-system, 'Roboto', Arial, sans-serif \",\n  secondary: \"'Quicksand', -apple-system, 'Roboto', Arial, sans-serif \",\n};\n","import styled, { createGlobalStyle, css } from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\nimport { colours, sizes, fonts } from './variables';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    font-family: ${fonts.primary};\n    margin: 0;\n    padding: 0;\n    -webkit-font-smoothing: antialiased;\n    @media ${sizes.tablet}{\n      font-size: 30px;\n    }\n    @media ${sizes.mobile}{\n      font-size: 13px;\n    }\n  }\n  a,button{\n    color: white;\n    -webkit-tap-highlight-color: transparent;\n    &:focus, &:active{\n      outline: none;\n    }\n  }\n  .fade-appear, .fade-enter{\n    opacity: 0;\n    z-index: 1;\n  }\n  .fade-appear-active, .fade-enter{\n    &.fade-enter-active{\n      opacity: 1;\n      transition: opacity 0.5s ease 0.3s;\n    }\n  }\n  .fade-exit{\n    opacity: 1;\n  }\n  .fade-exit, .fade-exit-active{\n    opacity: 0;\n    transition: opacity 0.5s ease;\n  }\n`;\n\nexport const Page = styled.div`\n  overflow: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nexport const Copy = styled.p`\n  font-family: ${fonts.secondary};\n  width: 75%;\n  line-height: 1.5;\n  margin: 1em auto;\n`;\n\nconst sharedLinkStyle = css`\n  text-decoration: none;\n  text-transform: capitalize;\n  margin: 10px 20px;\n  display: inline-block;\n  width: 30%;\n  cursor: pointer;\n  transition: color 0.5s ease;\n  font-family: ${fonts.secondary};\n  &:hover{\n    color: ${colours.lightOrange};\n  }\n`;\n\nexport const BasicLink = styled.a`\n  ${sharedLinkStyle}\n`;\n\nexport const StyledLink = styled(Link)`\n  border: 1px solid white;\n  border-radius: 25px;\n  padding: 7px 0;\n  ${sharedLinkStyle}\n`;\n\nexport const NewCategoryLink = styled(StyledLink)`\n  margin: auto 0;\n  width: auto;\n  border: none;\n`;\n\nexport const MainTitle = styled.h1`\n  font-size: 3rem;\n  text-transform: capitalize;\n  transition: all 0.5s ease;\n  @media ${sizes.desktopSmall}{\n    font-size: 2rem;\n  }\n  @media ${sizes.tablet}{\n    font-size: 3.5rem;\n    margin: 0px auto 40px;\n  }\n  @media ${sizes.mobile} {\n    font-size: 1.7rem;\n    margin: 10px auto;\n  }\n`;\n\nconst Container = styled.div`\n  width: 30%;\n  position: absolute;\n  background-color: rgba(57, 57, 57, 0.9);\n  top: 50%;\n  padding: 30px;\n  transform: translateY(-50%);\n  transition: all 0.5s ease;\n  box-shadow: 0px 0px 20px 0px black;\n  @media ${sizes.tablet}{\n    box-sizing: border-box;\n    position: relative;\n    top: 0;\n    left: 0;\n    width: 90%;\n    margin: 20px auto;\n    transform: translate(0px, 0px);\n  }\n  @media ${sizes.mobile}{\n    padding: 10px;\n  }\n`;\n\nexport const RightContainer = styled(Container)`\n  right: 10%;\n  opacity: ${props => (props.loading ? 0 : 1)};\n  @media ${sizes.tablet}{\n    padding: 70px 40px;\n  }\n  @media ${sizes.mobile}{\n    padding: 10px;\n  }\n`;\n\nexport const LeftContainer = styled(Container)`\n  left: 10%;\n`;\n","import axios from 'axios';\nimport {\n  FETCHED_CATEGORIES, FETCH_CATEGORIES, FETCH_ERROR,\n} from './types';\n\nconst fetchCategories = () => async (dispatch) => {\n  dispatch({ type: FETCH_CATEGORIES });\n  try {\n    const { data: categories } = await axios('https://api.chucknorris.io/jokes/categories');\n    dispatch({ type: FETCHED_CATEGORIES, payload: categories });\n  } catch (err) {\n    dispatch({ type: FETCH_ERROR });\n  }\n};\n\nexport default fetchCategories;\n","export const FETCH_CATEGORIES = 'FETCH_CATEGORIES';\nexport const FETCHED_CATEGORIES = 'FETCHED_CATEGORIES';\nexport const FETCH_JOKE = 'FETCH_JOKE';\nexport const FETCHED_JOKE = 'FETCHED_JOKE';\nexport const FETCH_ERROR = 'FETCH_ERROR';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  StyledLink,\n  RightContainer,\n  LeftContainer,\n  MainTitle,\n  Page,\n  Copy,\n} from '../styles/common';\nimport fetchCategories from '../actions/categories';\n\nexport class Categories extends Component {\n  componentWillMount() {\n    const { fetchCategories: getCategories } = this.props;\n    getCategories();\n  }\n\n  render() {\n    const { categories } = this.props;\n    const categoryItems = categories.map((category, index) => (\n      // eslint-disable-next-line react/no-array-index-key\n      <StyledLink to={`/joke/${category}`} key={index}>\n        {category}\n      </StyledLink>\n    ));\n    const { loading } = this.props;\n\n    return (\n      <Page>\n        <LeftContainer>\n          <MainTitle>Joke categories</MainTitle>\n          <Copy>\n            Select a category to fetch a random Chuck Norris joke, relating to\n            your chosen category.\n          </Copy>\n        </LeftContainer>\n        <RightContainer loading={loading}>\n          {categoryItems}\n        </RightContainer>\n      </Page>\n    );\n  }\n}\n\nCategories.propTypes = {\n  fetchCategories: PropTypes.func.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  categories: state.categories.categories,\n  loading: state.categories.loading,\n});\n\nexport default connect(mapStateToProps, { fetchCategories })(Categories);\n","import axios from 'axios';\nimport {\n  FETCHED_JOKE, FETCH_JOKE, FETCH_ERROR,\n} from './types';\n\nconst fetchJokeFromCategory = category => async (dispatch) => {\n  dispatch({ type: FETCH_JOKE });\n  try {\n    const { data: joke } = await axios(`https://api.chucknorris.io/jokes/random?category=${category}`);\n    dispatch({ type: FETCHED_JOKE, payload: joke });\n  } catch (err) {\n    dispatch({ type: FETCH_ERROR });\n  }\n};\n\nexport default fetchJokeFromCategory;\n","import styled from 'styled-components/macro';\nimport { sizes, fonts, colours } from './variables';\n\nexport const JokeIcon = styled.img`\n  max-width: 50px;\n  margin: 10px 0;\n`;\n\nexport const JokeHeader = styled.h3`\n  transition: all 0.5s ease;\n  margin: 35px auto;\n  width: 80%;\n  @media ${sizes.tablet}{\n    margin: 40px auto;\n  }\n  @media ${sizes.mobile}{\n    margin: 10px auto;\n    width: 90%;\n  }\n`;\n\nexport const PrimaryButton = styled.button`\n  background-color: ${colours.orange};\n  outline: none;\n  display: inline-block;\n  width: max-content;\n  padding: 12px 25px;\n  margin: auto 20px auto 0;\n  border: 0;\n  border-radius: 25px;\n  cursor: pointer;\n  font-family: ${fonts.secondary};\n  font-size: 100%;\n  transition: all 0.5s ease;\n  &:hover{\n    background-color: transparent;\n    color: ${colours.orange};\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-content: center;\n  margin: 20px auto;\n  width: max-content;\n  @media ${sizes.mobile}{\n    margin: 10px auto;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport fetchJokeFromCategory from '../actions/joke';\nimport {\n  RightContainer,\n  LeftContainer,\n  BasicLink,\n  MainTitle,\n  NewCategoryLink,\n  Page,\n} from '../styles/common';\nimport {\n  Row,\n  PrimaryButton,\n  JokeIcon,\n  JokeHeader,\n} from '../styles/joke';\n\nexport class Joke extends Component {\n  constructor(props) {\n    super(props);\n    this.getJoke = this.getJoke.bind(this);\n  }\n\n  componentWillMount() {\n    this.getJoke();\n  }\n\n  getJoke() {\n    const { fetchJokeFromCategory: getJokeFromCategory, match } = this.props;\n    const { category } = match.params;\n    getJokeFromCategory(category);\n  }\n\n  render() {\n    const { joke, loading } = this.props;\n    return (\n      <Page>\n        <LeftContainer>\n          <MainTitle>\n            {joke.category}\n            {' '}\n            Joke\n          </MainTitle>\n          <Row>\n            <PrimaryButton type=\"button\" onClick={this.getJoke}> New Joke</PrimaryButton>\n            <NewCategoryLink to=\"/\">New Category</NewCategoryLink>\n          </Row>\n        </LeftContainer>\n        <RightContainer loading={loading}>\n          { joke.icon_url ? <JokeIcon src={`${joke.icon_url}`} alt=\"jokeImage\" /> : null}\n          <JokeHeader>{joke.value}</JokeHeader>\n          <BasicLink href={`${joke.url}`} rel=\"noopener noreferrer\" target=\"_blank\">See joke</BasicLink>\n        </RightContainer>\n      </Page>\n    );\n  }\n}\n\nJoke.propTypes = {\n  match: PropTypes.shape({}).isRequired,\n  fetchJokeFromCategory: PropTypes.func.isRequired,\n  joke: PropTypes.shape({}).isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  joke: state.joke.joke,\n  loading: state.joke.loading,\n});\n\nexport default connect(mapStateToProps, { fetchJokeFromCategory })(Joke);\n","import styled, { keyframes } from 'styled-components/macro';\nimport { colours } from './variables';\n\nexport const SpinnerContainer = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%,-50%);\n  margin: auto;\n  width: 150px;\n  height: 150px;\n  display: flex;\n  justify-content: space-evenly;\n  flex-direction: column;\n  align-items: center;\n  z-index: 2;\n  transition: all 0.5s ease;\n`;\n\nexport const Parent = styled.div`\n  width: 50px;\n  height: 50px;\n  transform: rotate(45deg);\n  position: relative;\n`;\n\nconst translate = keyframes`\n  25%{\n    transform: translate(30px,0);\n  }\n  50%{\n    transform: translate(30px,30px);\n  }\n  75%{\n    transform: translate(0,30px);\n  }\n  100%{\n    transform: translate(0,0);\n  }\n`;\n\nconst trace = keyframes`\n  0%{\n    border: 5px solid white;\n  }\n  25%{\n    border: 5px solid ${colours.orange};\n  }\n  50%, 100%{\n    border: 5px solid white;\n  }\n`;\n\nexport const BaseElement = styled.div`\n  width: 10px;\n  height: 10px;\n  position: absolute;\n  border-radius: 100%;\n  border: 5px solid white;\n  box-shadow: 0 0 20px 0 ${colours.black};\n  animation: ${trace} 2s cubic-bezier(0.75, 0, 0.5, 1) infinite normal;\n  &.tl{\n    top: 0;\n    left: 0;\n    animation-delay: 0s;\n  }\n  &.tr{\n    top: 0;\n    right: 0;\n    animation-delay: 0.5s;\n  }\n  &.br{\n    bottom: 0;\n    right: 0;\n    animation-delay: 1s;\n  }\n  &.bl{\n    bottom: 0;\n    left: 0;\n    animation-delay: 1.5s;\n  }\n  &.moved{\n    background: ${colours.orange};\n    z-index: 10;\n    border: 5px solid ${colours.orange};\n    animation: ${translate} 2s cubic-bezier(0.75, 0, 0.5, 1) infinite;\n  }\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { SpinnerContainer, Parent, BaseElement } from '../styles/spinner';\n\nfunction Spinner(props) {\n  const { categoryLoading, jokeLoading } = props;\n  const unmountOnExit = true;\n  return (\n    <CSSTransition timeout={2000} classNames=\"fade\" in={categoryLoading || jokeLoading} unmountOnExit={unmountOnExit}>\n      <SpinnerContainer>\n        <Parent>\n          <BaseElement className=\"moved\" />\n          <BaseElement className=\"tl\" />\n          <BaseElement className=\"tr\" />\n          <BaseElement className=\"bl\" />\n          <BaseElement className=\"br\" />\n        </Parent>\n      </SpinnerContainer>\n    </CSSTransition>\n  );\n}\n\nSpinner.propTypes = {\n  categoryLoading: PropTypes.bool.isRequired,\n  jokeLoading: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  categoryLoading: state.categories.loading,\n  jokeLoading: state.joke.loading,\n});\n\nexport default connect(mapStateToProps)(Spinner);\n","import {\n  FETCH_CATEGORIES, FETCHED_CATEGORIES, FETCH_ERROR,\n} from '../actions/types';\n\nconst initialState = {\n  categories: [],\n  loading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCHED_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload,\n        loading: false,\n      };\n    case FETCH_ERROR:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_JOKE, FETCHED_JOKE, FETCH_ERROR,\n} from '../actions/types';\n\nconst initialState = {\n  joke: {},\n  loading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_JOKE:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCHED_JOKE:\n      return {\n        ...state,\n        joke: action.payload,\n        loading: false,\n      };\n    case FETCH_ERROR:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport categories from './categoriesReducer';\nimport joke from './jokeReducer';\n\nexport default combineReducers({\n  categories,\n  joke,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  ),\n);\n\nexport default store;\n","import styled from 'styled-components/macro';\nimport { colours, sizes } from './variables';\nimport backgroundImage from '../assets/images/background.jpg';\n\nconst AppShell = styled.div`\n  text-align: center;\n  background-color: ${colours.black};\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  background-repeat: no-repeat;\n  height: 100vh;\n  @media ${sizes.tablet} {\n    background-position: 50%;\n  }\n`;\n\nexport default AppShell;\n","/* eslint-disable import/no-named-as-default */\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Categories from './pages/Categories';\nimport Joke from './pages/Joke';\nimport Spinner from './components/Spinner';\nimport store from './store';\nimport { GlobalStyle } from './styles/common';\nimport AppShell from './styles/app';\n\nconst App = () => (\n  <Provider store={store}>\n    <GlobalStyle />\n    <Router>\n      <AppShell>\n        <Spinner />\n        <Route render={({ location }) => (\n          <TransitionGroup>\n            <CSSTransition key={location.pathname} timeout={2000} classNames=\"fade\">\n              <Switch location={location}>\n                <Route exact path=\"/\" component={Categories} />\n                <Route path=\"/joke/:category\" component={Joke} />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        )}\n        />\n      </AppShell>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}